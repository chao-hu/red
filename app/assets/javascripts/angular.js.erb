//= require angularjs/angular.min.js
//= require axios/dist/axios.min.js


var authenticity_token = $('meta[name="csrf-token"]').attr('content');
axios.defaults.headers.post['Content-Type'] = 'application/json';
axios.defaults.headers.post['Accept'] = 'application/json';

axios.defaults.headers.put['Content-Type'] = 'application/json';
axios.defaults.headers.put['Accept'] = 'application/json';
axios.defaults.validateStatus = function (status) {
  return status >= 200 && status < 500; // default
}

angular.module('app', [])
  .controller('AppController', function($scope) {
    $scope.submitted = false;
    $scope.app = window.appObj;
    $scope.appPersisted = window.appPersisted;
    $scope.appsUnderService = window.appsUnderService;


    fillApp()

    $scope.submit = function () {
      $scope.submitted = true;
      if($scope.appForm.$invalid) {
        alert("not valid");
      }else{
        bootbox.prompt("name a version", function (result) {
          $scope.app.version_name = result;
          axios[window.httpMethod](window.postPath, {
            app: JSON.parse(angular.toJson($scope.app)),
            authenticity_token: authenticity_token
          }).then(function (response) {
            window.location.href = "/services";
          }, function (response) {
            console.log(response.data.message);
          });
        }
        );
      }
    }

    $scope.supportGateway = function () {
      return $scope.app.network == "bridge" ||
        $scope.app.network == "host";
    }

    // envs
    $scope.removeEnv = function (key) {
      delete $scope.app.env[key];
    }

    $scope.moreEnv = function () {
      if($scope.app.env == null || Object.getOwnPropertyNames($scope.app.env || {}).length == 0) {
        $scope.app.env = {};
      }

      $scope.app.env["KEY" + Object.keys($scope.app.env).length] = "VALUE";
    }

    // uri
    $scope.removeUris = function (index) {
      $scope.app.uris.splice(index, 1);
    }

    $scope.moreUris = function () {
      if($scope.app.uris == null) {
        $scope.app.uris = [];
      }

      $scope.app.uris.push("http://baidu.com/foobar" + $scope.app.uris.length + ".tar.gz");
    }


    // labels
    $scope.removeLabel = function (key) {
      delete $scope.app.labels[key];
    }

    $scope.moreLabels = function () {
      if($scope.app.labels == null) {
        $scope.app.labels = {};
      }

      $scope.app.labels["key-" + Object.keys($scope.app.labels).length] = "value";
    }

    // volumes
    $scope.removeVolumes = function (index) {
      $scope.app.volumes.splice(index, 1);
    }

    $scope.moreVolumes = function () {
      if($scope.app.volumes == null) {
        $scope.app.volumes = [];
      }

      $scope.app.volumes.push(
        {
          hostPath: "/",
          containerPath: "/hostHome",
          mode: "RO"
        }
      );
    }

    // links
    $scope.removeLink = function (index) {
      $scope.app.app_links[index]._destroy = 1;
    }

    $scope.moreLink = function () {
      if($scope.app.app_links == null) {
        $scope.app.app_links = [];
      }

      $scope.app.app_links.push({
          alias: Object.keys($scope.appsUnderService)[0],
        output_app_id: Object.values($scope.appsUnderService)[0],
        _destroy: 0,
        });
    }


    // portmappings
    $scope.removePortmapping = function (index) {
      $scope.app.portmappings.splice(index, 1);
    }

    $scope.morePortmapping = function () {
      if($scope.app.portmappings == null) {
        $scope.app.portmappings = [];
      }

      $scope.app.portmappings.push(
        {name: "web",
          containerPort: 80,
          hostPort: 0,
          proto: "tcp"}
      );
    }

    function fillApp() {
      if($scope.app.cpu == null){
        $scope.app.cpu = 0.1;
      }

      if($scope.app.mem == null){
        $scope.app.mem = 64;
      }

      if($scope.app.disk == null){
        $scope.app.disk = 0;
      }

      if($scope.app.cmd == null){
        $scope.app.cmd = "";
      }


      if($scope.app.name == null){
        $scope.app.name = "god-love-cat";
      }

      if($scope.app.desc == null){
        $scope.app.desc = "from here to sunny tommorrow!";
      }

      if($scope.app.image == null){
        $scope.app.image = "nginx:latest";
      }

      if($scope.app.network == null){
        $scope.app.network = "bridge";
      }

      if($scope.app.health_check == null || Object.getOwnPropertyNames($scope.health_check || {}).length == 0){
        $scope.app.health_check = {
          "protocol": "HTTP",
          "value": "echo 1;",
          "path": "/",
          "delaySeconds": 10,
          "gracePeriodSeconds": 1,
          "portName": "web",
          "intervalSeconds": 1,
          "timeoutSeconds": 2,
          "consecutiveFailures": 10
        };
      }
    }
  });

angular.module("selectBox", []).directive('selectBox', function() {
 return {
  restrict: 'E',
  link: function() {
   return $(window).bind("load", function() {
    //this will make all your select elements use bootstrap-select
    return $('select').selectpicker();
   });
  }
 };
}); 
